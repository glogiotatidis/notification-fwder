name: Release Build

on:
  push:
    tags:
      - 'v*'
  release:
    types: [created, published]
  workflow_dispatch:
    inputs:
      version_name:
        description: 'Version name (e.g., 1.0.0)'
        required: false
        default: 'manual-build'
      skip_tests:
        description: 'Skip running tests'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      build_type:
        description: 'Build type'
        required: false
        default: 'debug'
        type: choice
        options:
          - 'debug'
          - 'release'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run unit tests
        if: github.event.inputs.skip_tests != 'true'
        run: ./gradlew testReleaseUnitTest

      - name: Run instrumented tests
        if: github.event.inputs.skip_tests != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: default
          arch: x86_64
          profile: Nexus 6
          script: ./gradlew connectedDebugAndroidTest

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-release-${{ github.ref_name }}
          path: |
            app/build/reports/tests/
            app/build/test-results/
          retention-days: 90

      - name: Decode keystore
        if: ${{ secrets.KEYSTORE_FILE_BASE64 != '' }}
        run: |
          echo "${{ secrets.KEYSTORE_FILE_BASE64 }}" | base64 -d > release.keystore

      - name: Build APK
        env:
          KEYSTORE_FILE: release.keystore
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          BUILD_TYPE="${{ github.event.inputs.build_type }}"
          if [ -z "$BUILD_TYPE" ]; then
            BUILD_TYPE="release"
          fi

          if [ "$BUILD_TYPE" = "release" ] && [ -f "release.keystore" ]; then
            echo "Building release APK"
            ./gradlew assembleRelease
          else
            echo "Building debug APK"
            ./gradlew assembleDebug
          fi

      - name: Rename APK
        run: |
          # Determine version name
          if [ -n "${{ github.event.inputs.version_name }}" ]; then
            VERSION="${{ github.event.inputs.version_name }}"
          elif [ -n "${GITHUB_REF#refs/tags/}" ] && [ "${GITHUB_REF#refs/tags/}" != "$GITHUB_REF" ]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION="manual-$(date +%Y%m%d-%H%M%S)"
          fi

          # Move and rename APK
          if [ -f "app/build/outputs/apk/release/app-release.apk" ]; then
            mv app/build/outputs/apk/release/app-release.apk app-${VERSION}.apk
          elif [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
            mv app/build/outputs/apk/debug/app-debug.apk app-${VERSION}-debug.apk
          fi

      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-${{ github.ref_name }}
          path: app-*.apk
          retention-days: 90

      - name: Attach APK to release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: app-*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build info
        run: |
          echo "Release build completed"
          echo "Tag: ${GITHUB_REF#refs/tags/}"
          ls -lh app-*.apk || ls -lh app/build/outputs/apk/

